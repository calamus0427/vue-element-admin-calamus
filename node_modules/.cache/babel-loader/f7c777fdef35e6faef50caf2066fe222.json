{"remainingRequest":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/calamus-vue-element-admin/src/components/canvas/canvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/src/components/canvas/canvas.vue","mtime":1573108767911},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7Ci8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ0xDYW52YXNCZycsCiAgcHJvcHM6IHsKICAgIC8v5Y6f54K55pWw6YePCiAgICBkb3RzTnVtOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNTAKICAgIH0sCiAgICAvL+W9qeiJsui/mOaYr+m7keeZvQogICAgaXNDb2xvcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgLy/lnIbnmoTpopzoibIKICAgIHJvdW5kQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIzk5OSIKICAgIH0sCiAgICAvL+ebtOe6v+minOiJsgogICAgbGluZUNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiNjY2MiCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhbnZhcyIpOwogICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwoKICAgIHZhciBybmRDbCA9IGZ1bmN0aW9uIHJuZENsKCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjI1KTsKICAgIH07CgogICAgdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7CiAgICB2YXIgaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0OwogICAgdmFyIGJhc2VfbGlzdCA9IFtdOwogICAgY2FudmFzLndpZHRoID0gd2lkdGg7CiAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0OyAvLyDnu5jliLblm60KCiAgICB2YXIgZHJhd1JvdW5kcyA9IGZ1bmN0aW9uIGRyYXdSb3VuZHMob2JqLCBpbmRleCkgewogICAgICB2YXIgeCA9IG9iai54LAogICAgICAgICAgeSA9IG9iai55LAogICAgICAgICAgciA9IG9iai5yLAogICAgICAgICAgY29sb3IgPSBvYmouY29sb3I7CiAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgY3R4LmFyYyh4LCB5LCByLCAwLCAyICogTWF0aC5QSSk7CgogICAgICBpZiAoX3RoaXMuaXNDb2xvcikgewogICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcjsKICAgICAgfSBlbHNlIHsKICAgICAgICBjdHguZmlsbFN0eWxlID0gX3RoaXMucm91bmRDb2xvcjsKICAgICAgfQoKICAgICAgY3R4LmZpbGwoKTsKICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgfTsgLy/liKTmlq3np7vliqjmlrnlkJEKCgogICAgdmFyIGNvbnRyb2xEaXJlY3Rpb24gPSBmdW5jdGlvbiBjb250cm9sRGlyZWN0aW9uKG9iaikgewogICAgICBpZiAob2JqLnggPj0gd2lkdGggLSBvYmoucikgewogICAgICAgIG9iai5jb250cm9sWCA9ICJsZWZ0IjsKICAgICAgfSBlbHNlIGlmIChvYmoueCA8PSBwYXJzZUludChvYmouciAvIDIpKSB7CiAgICAgICAgb2JqLmNvbnRyb2xYID0gInJpZ2h0IjsKICAgICAgfQoKICAgICAgaWYgKG9iai55ID49IGhlaWdodCAtIG9iai5yKSB7CiAgICAgICAgb2JqLmNvbnRyb2xZID0gImJvdHRvbSI7CiAgICAgIH0gZWxzZSBpZiAob2JqLnkgPD0gcGFyc2VJbnQob2JqLnIgLyAyKSkgewogICAgICAgIG9iai5jb250cm9sWSA9ICJ0b3AiOwogICAgICB9CgogICAgICByZXR1cm4gb2JqOwogICAgfTsgLy/liJLnur8KCgogICAgdmFyIGRyYXdMaW5lID0gZnVuY3Rpb24gZHJhd0xpbmUobGlzdCkgewogICAgICBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4Lm1vdmVUbyhpdGVtLngxLCBpdGVtLnkxKTsKICAgICAgICBjdHgubGluZVRvKGl0ZW0ueDIsIGl0ZW0ueTIpOwogICAgICAgIGN0eC5MaW5lV2VpZ2h0ID0gMTsKCiAgICAgICAgaWYgKF90aGlzLmlzQ29sb3IpIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGl0ZW0uY29sb3I7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IF90aGlzLmxpbmVDb2xvcjsKICAgICAgICB9CgogICAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgICBjdHguY2xvc2VQYXRoKCk7CiAgICAgIH0pOwogICAgfTsgLy/nu5jliLYKCgogICAgdmFyIGRyYXcgPSBmdW5jdGlvbiBkcmF3KGxpc3QpIHsKICAgICAgdmFyIGRvdHNfYXJyID0gW107CiAgICAgIHZhciBsaW5lX2FyciA9IFtdOwogICAgICBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICB2YXIgeHkgPSBjb250cm9sRGlyZWN0aW9uKGl0ZW0pOwogICAgICAgIHZhciBvYmogPSByb3VuZE1vdmUoeHkpOwogICAgICAgIGRvdHNfYXJyLnB1c2gob2JqKTsKICAgICAgfSk7CiAgICAgIGRvdHNfYXJyLm1hcChmdW5jdGlvbiAoaXRlbTEsIGluZGV4MSkgewogICAgICAgIGRvdHNfYXJyLm1hcChmdW5jdGlvbiAoaXRlbTIsIGluZGV4MikgewogICAgICAgICAgaWYgKGl0ZW0xICE9PSBpdGVtMikgewogICAgICAgICAgICB2YXIgeCA9IGl0ZW0xLnggLSBpdGVtMi54OwogICAgICAgICAgICB2YXIgeSA9IGl0ZW0xLnkgLSBpdGVtMi55OwoKICAgICAgICAgICAgaWYgKE1hdGguYWJzKHgpIDwgMTUwICYmIE1hdGguYWJzKHkpIDwgMTUwKSB7CiAgICAgICAgICAgICAgdmFyIG9iaiA9IHsKICAgICAgICAgICAgICAgIHgxOiBpdGVtMS54LAogICAgICAgICAgICAgICAgeTE6IGl0ZW0xLnksCiAgICAgICAgICAgICAgICB4MjogaXRlbTIueCwKICAgICAgICAgICAgICAgIHkyOiBpdGVtMi55LAogICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0xLmNvbG9yCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBsaW5lX2Fyci5wdXNoKG9iaik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIGRyYXdMaW5lKGxpbmVfYXJyKTsKICAgICAgZG90c19hcnIubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgIGRyYXdSb3VuZHMoaXRlbSwgaW5kZXgpOwogICAgICB9KTsKICAgICAgYmFzZV9saXN0ID0gZG90c19hcnI7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIC8vIGlmKHRoaXMucGF1c2VkKXsKICAgICAgICByZURyYXcoKTsgLy8gfQogICAgICB9LCA1MCk7CiAgICB9OwoKICAgIHZhciByZURyYXcgPSBmdW5jdGlvbiByZURyYXcoKSB7CiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7CiAgICAgIGRyYXcoYmFzZV9saXN0KTsKICAgIH07IC8v56e75YqoCgoKICAgIHZhciByb3VuZE1vdmUgPSBmdW5jdGlvbiByb3VuZE1vdmUob2JqKSB7CiAgICAgIHN3aXRjaCAob2JqLmNvbnRyb2xYKSB7CiAgICAgICAgY2FzZSAicmlnaHQiOgogICAgICAgICAgb2JqLngrKzsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJsZWZ0IjoKICAgICAgICAgIG9iai54LS07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgfQoKICAgICAgc3dpdGNoIChvYmouY29udHJvbFkpIHsKICAgICAgICBjYXNlICJ0b3AiOgogICAgICAgICAgb2JqLnkrKzsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJib3R0b20iOgogICAgICAgICAgb2JqLnktLTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICB9CgogICAgICByZXR1cm4gb2JqOwogICAgfTsgLy/liJvpgKDlnIbngrkKCgogICAgdmFyIGNyZWF0RG90cyA9IGZ1bmN0aW9uIGNyZWF0RG90cygpIHsKICAgICAgdmFyIGFyciA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5kb3RzTnVtOyBpKyspIHsKICAgICAgICB2YXIgb2JqID0ge307CiAgICAgICAgb2JqLnggPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogd2lkdGgpOwogICAgICAgIG9iai55ID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIGhlaWdodCk7CiAgICAgICAgb2JqLnIgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTApOwogICAgICAgIG9iai5jb250cm9sWCA9IHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAxMCkgPiA1ID8gImxlZnQiIDogInJpZ2h0IjsKICAgICAgICBvYmouY29udHJvbFkgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTApID4gNSA/ICJib3R0b20iIDogInRvcCI7CiAgICAgICAgb2JqLmNvbG9yID0gInJnYmEoIi5jb25jYXQocm5kQ2woKSwgIiwiKS5jb25jYXQocm5kQ2woKSwgIiwiKS5jb25jYXQocm5kQ2woKSwgIiwuMykiKTsKICAgICAgICBhcnIucHVzaChvYmopOwogICAgICB9CgogICAgICByZXR1cm4gYXJyOwogICAgfTsKCiAgICBkcmF3KGNyZWF0RG90cygpKTsgLy/pvKDmoIfnp7vliqgKCiAgICB2YXIgbW92ZVhZID0gZnVuY3Rpb24gbW92ZVhZKGV2ZW50KSB7CiAgICAgIHZhciBvYmogPSB7fTsKICAgICAgb2JqLnggPSBldmVudC5jbGllbnRYOwogICAgICBvYmoueSA9IGV2ZW50LmNsaWVudFk7CiAgICAgIG9iai5yID0gMDsKICAgICAgYmFzZV9saXN0WzBdID0gb2JqOwogICAgICBiYXNlX2xpc3RbMF1bInIiXSA9IDE7CiAgICB9OyAvL+m8oOagh+eCueWHuwoKCiAgICB2YXIgYWRkWFkgPSBmdW5jdGlvbiBhZGRYWShldmVudCkgewogICAgICB2YXIgb2JqID0ge307CiAgICAgIG9iai54ID0gZXZlbnQuY2xpZW50WDsKICAgICAgb2JqLnkgPSBldmVudC5jbGllbnRZOwogICAgICBvYmouciA9IHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAxMCk7CiAgICAgIG9iai5jb2xvciA9ICJyZ2JhKCIuY29uY2F0KHJuZENsKCksICIsIikuY29uY2F0KHJuZENsKCksICIsIikuY29uY2F0KHJuZENsKCksICIsLjMpIik7CiAgICAgIG9iai5jb250cm9sWCA9IHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAxMCkgPiA1ID8gJ2xlZnQnIDogJ3JpZ2h0JzsKICAgICAgb2JqLmNvbnRyb2xZID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwKSA+IDUgPyAnYm90dG9tJyA6ICd0b3AnOwogICAgICBiYXNlX2xpc3QucHVzaChvYmopOwogICAgfTsKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgbW92ZVhZKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGFkZFhZKTsKICB9Cn07"},{"version":3,"sources":["canvas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <canvas id=\"canvas\">\n    </canvas>\n</template>\n<script>\nexport default {\n    name:'CLCanvasBg',\n    props: {\n      //原点数量\n        dotsNum: {\n            type: Number,\n            default: 50\n        },\n        //彩色还是黑白\n        isColor: {\n            type: Boolean,\n            default: true\n        },\n        //圆的颜色\n        roundColor: {\n            type: String,\n            default: \"#999\"\n        },\n        //直线颜色\n        lineColor: {\n            type: String,\n            default: \"#ccc\"\n        }\n    },\n    mounted() {\n        const canvas = document.getElementById(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const rndCl = () => Math.floor(Math.random() * 225);\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        var base_list = [];\n        canvas.width = width;\n        canvas.height = height;\n        // 绘制园\n        const drawRounds = (obj, index) => {\n            let { x, y, r, color } = obj;\n            ctx.beginPath();\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\n            if (this.isColor) {\n                ctx.fillStyle = color;\n            } else {\n                ctx.fillStyle = this.roundColor\n            }\n            ctx.fill();\n            ctx.closePath();\n        }\n\n        //判断移动方向\n        const controlDirection = (obj) => {\n            if (obj.x >= (width - obj.r)) {\n                obj.controlX = \"left\";\n            } else if (obj.x <= parseInt(obj.r / 2)) {\n                obj.controlX = \"right\";\n            }\n            if (obj.y >= (height - obj.r)) {\n                obj.controlY = \"bottom\";\n            } else if (obj.y <= parseInt(obj.r / 2)) {\n                obj.controlY = \"top\"\n            }\n            return obj\n        }\n        //划线\n        const drawLine = (list) => {\n            list.map((item, index) => {\n                ctx.beginPath();\n                ctx.moveTo(item.x1, item.y1);\n                ctx.lineTo(item.x2, item.y2);\n                ctx.LineWeight = 1;\n                if (this.isColor) {\n                    ctx.strokeStyle = item.color;\n                } else {\n                    ctx.strokeStyle = this.lineColor\n                }\n                ctx.stroke();\n                ctx.closePath();\n            })\n        }\n        //绘制\n        const draw = (list) => {\n            let dots_arr = [];\n            let line_arr = [];\n            list.map((item, index) => {\n                let xy = controlDirection(item);\n                let obj = roundMove(xy);\n                dots_arr.push(obj);\n            });\n            dots_arr.map((item1, index1) => {\n                dots_arr.map((item2, index2) => {\n                    if (item1 !== item2) {\n                        let x = item1.x - item2.x;\n                        let y = item1.y - item2.y;\n                        if (Math.abs(x) < 150 && Math.abs(y) < 150) {\n                            let obj = {\n                                x1: item1.x,\n                                y1: item1.y,\n                                x2: item2.x,\n                                y2: item2.y,\n                                color: item1.color\n                            }\n                            line_arr.push(obj)\n                        }\n                    }\n                })\n            })\n            drawLine(line_arr);\n            dots_arr.map((item, index) => {\n                drawRounds(item, index)\n            })\n            base_list = dots_arr;\n            setTimeout(() => {\n                // if(this.paused){\n                reDraw()\n                // }\n            }, 50)\n        }\n        const reDraw = () => {\n            ctx.clearRect(0, 0, width, height);\n            draw(base_list)\n        }\n        //移动\n        const roundMove = (obj) => {\n            switch (obj.controlX) {\n                case \"right\":\n                    obj.x++;\n                    break;\n                case \"left\":\n                    obj.x--;\n                    break;\n                default:\n            }\n            switch (obj.controlY) {\n                case \"top\":\n                    obj.y++;\n                    break;\n                case \"bottom\":\n                    obj.y--;\n                    break;\n                default:\n            }\n            return obj\n        }\n        //创造圆点\n        const creatDots = () => {\n            let arr = [];\n            for (let i = 0; i < this.dotsNum; i++) {\n                let obj = {};\n                obj.x = parseInt(Math.random() * width);\n                obj.y = parseInt(Math.random() * height);\n                obj.r = parseInt(Math.random() * 10);\n                obj.controlX = parseInt(Math.random() * 10) > 5 ? \"left\" : \"right\"\n                obj.controlY = parseInt(Math.random() * 10) > 5 ? \"bottom\" : \"top\"\n                obj.color = `rgba(${rndCl()},${rndCl()},${rndCl()},.3)`\n                arr.push(obj)\n            }\n            return arr\n        }\n        draw(creatDots())\n        //鼠标移动\n        const moveXY = (event) => {\n            let obj = {};\n            obj.x = event.clientX;\n            obj.y = event.clientY;\n            obj.r = 0;\n            base_list[0] = obj;\n            base_list[0][\"r\"] = 1;\n        }\n        //鼠标点击\n        const addXY = (event) => {\n            let obj = {};\n            obj.x = event.clientX;\n            obj.y = event.clientY;\n            obj.r = parseInt(Math.random() * 10);\n            obj.color = `rgba(${rndCl()},${rndCl()},${rndCl()},.3)`;\n            obj.controlX = parseInt(Math.random() * 10) > 5 ? 'left' : 'right'\n            obj.controlY = parseInt(Math.random() * 10) > 5 ? 'bottom' : 'top'\n            base_list.push(obj);\n        }\n        window.addEventListener(\"mousemove\", moveXY);\n        window.addEventListener(\"click\", addXY)\n    },\n};\n\n</script>\n<style>\n#canvas {\n    position: fixed;\n    z-index: -1;\n    top: 0;\n    left: 0;\n}\n</style>\n"],"sourceRoot":"src/components/canvas"}]}