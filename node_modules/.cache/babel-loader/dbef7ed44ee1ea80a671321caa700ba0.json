{"remainingRequest":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/babel-loader/lib/index.js!/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/components/echarts/scatter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/components/echarts/scatter.vue","mtime":1573710475615},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KaW1wb3J0IEVDaGFydHMgZnJvbSAidnVlLWVjaGFydHMvY29tcG9uZW50cy9FQ2hhcnRzIjsKaW1wb3J0IHsgZ3JhcGhpYyB9IGZyb20gJ2VjaGFydHMvbGliL2V4cG9ydCc7CmltcG9ydCAiZWNoYXJ0cy9saWIvY2hhcnQvc2NhdHRlciI7CnZhciBfZGF0YSA9IFtbWzI4NjA0LCA3NywgMTcwOTY4NjksICdBdXN0cmFsaWEnLCAxOTkwXSwgWzMxMTYzLCA3Ny40LCAyNzY2MjQ0MCwgJ0NhbmFkYScsIDE5OTBdLCBbMTUxNiwgNjgsIDExNTQ2MDU3NzMsICdDaGluYScsIDE5OTBdLCBbMTM2NzAsIDc0LjcsIDEwNTgyMDgyLCAnQ3ViYScsIDE5OTBdLCBbMjg1OTksIDc1LCA0OTg2NzA1LCAnRmlubGFuZCcsIDE5OTBdLCBbMjk0NzYsIDc3LjEsIDU2OTQzMjk5LCAnRnJhbmNlJywgMTk5MF0sIFszMTQ3NiwgNzUuNCwgNzg5NTgyMzcsICdHZXJtYW55JywgMTk5MF0sIFsyODY2NiwgNzguMSwgMjU0ODMwLCAnSWNlbGFuZCcsIDE5OTBdLCBbMTc3NywgNTcuNywgODcwNjAxNzc2LCAnSW5kaWEnLCAxOTkwXSwgWzI5NTUwLCA3OS4xLCAxMjIyNDkyODUsICdKYXBhbicsIDE5OTBdLCBbMjA3NiwgNjcuOSwgMjAxOTQzNTQsICdOb3J0aCBLb3JlYScsIDE5OTBdLCBbMTIwODcsIDcyLCA0Mjk3MjI1NCwgJ1NvdXRoIEtvcmVhJywgMTk5MF0sIFsyNDAyMSwgNzUuNCwgMzM5NzUzNCwgJ05ldyBaZWFsYW5kJywgMTk5MF0sIFs0MzI5NiwgNzYuOCwgNDI0MDM3NSwgJ05vcndheScsIDE5OTBdLCBbMTAwODgsIDcwLjgsIDM4MTk1MjU4LCAnUG9sYW5kJywgMTk5MF0sIFsxOTM0OSwgNjkuNiwgMTQ3NTY4NTUyLCAnUnVzc2lhJywgMTk5MF0sIFsxMDY3MCwgNjcuMywgNTM5OTQ2MDUsICdUdXJrZXknLCAxOTkwXSwgWzI2NDI0LCA3NS43LCA1NzExMDExNywgJ1VuaXRlZCBLaW5nZG9tJywgMTk5MF0sIFszNzA2MiwgNzUuNCwgMjUyODQ3ODEwLCAnVW5pdGVkIFN0YXRlcycsIDE5OTBdXSwgW1s0NDA1NiwgODEuOCwgMjM5Njg5NzMsICdBdXN0cmFsaWEnLCAyMDE1XSwgWzQzMjk0LCA4MS43LCAzNTkzOTkyNywgJ0NhbmFkYScsIDIwMTVdLCBbMTMzMzQsIDc2LjksIDEzNzYwNDg5NDMsICdDaGluYScsIDIwMTVdLCBbMjEyOTEsIDc4LjUsIDExMzg5NTYyLCAnQ3ViYScsIDIwMTVdLCBbMzg5MjMsIDgwLjgsIDU1MDM0NTcsICdGaW5sYW5kJywgMjAxNV0sIFszNzU5OSwgODEuOSwgNjQzOTUzNDUsICdGcmFuY2UnLCAyMDE1XSwgWzQ0MDUzLCA4MS4xLCA4MDY4ODU0NSwgJ0dlcm1hbnknLCAyMDE1XSwgWzQyMTgyLCA4Mi44LCAzMjk0MjUsICdJY2VsYW5kJywgMjAxNV0sIFs1OTAzLCA2Ni44LCAxMzExMDUwNTI3LCAnSW5kaWEnLCAyMDE1XSwgWzM2MTYyLCA4My41LCAxMjY1NzM0ODEsICdKYXBhbicsIDIwMTVdLCBbMTM5MCwgNzEuNCwgMjUxNTUzMTcsICdOb3J0aCBLb3JlYScsIDIwMTVdLCBbMzQ2NDQsIDgwLjcsIDUwMjkzNDM5LCAnU291dGggS29yZWEnLCAyMDE1XSwgWzM0MTg2LCA4MC42LCA0NTI4NTI2LCAnTmV3IFplYWxhbmQnLCAyMDE1XSwgWzY0MzA0LCA4MS42LCA1MjEwOTY3LCAnTm9yd2F5JywgMjAxNV0sIFsyNDc4NywgNzcuMywgMzg2MTE3OTQsICdQb2xhbmQnLCAyMDE1XSwgWzIzMDM4LCA3My4xMywgMTQzNDU2OTE4LCAnUnVzc2lhJywgMjAxNV0sIFsxOTM2MCwgNzYuNSwgNzg2NjU4MzAsICdUdXJrZXknLCAyMDE1XSwgWzM4MjI1LCA4MS40LCA2NDcxNTgxMCwgJ1VuaXRlZCBLaW5nZG9tJywgMjAxNV0sIFs1MzM1NCwgNzkuMSwgMzIxNzczNjMxLCAnVW5pdGVkIFN0YXRlcycsIDIwMTVdXV07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2xDaGFydFNjYXR0ZXIiLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNlbGZBZGFwdGlvbigpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wdGlvbjogewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5ZCE5Zu95Lq65Z2H5a+/5ZG95LiOR0RQ5a+55q+UJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICByaWdodDogMTAsCiAgICAgICAgICBkYXRhOiBbJzE5OTAnLCAnMjAxNSddCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIHR5cGU6ICdkYXNoZWQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgdHlwZTogJ2Rhc2hlZCcKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNjYWxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAnMTk5MCcsCiAgICAgICAgICBkYXRhOiBfZGF0YVswXSwKICAgICAgICAgIHR5cGU6ICdzY2F0dGVyJywKICAgICAgICAgIHN5bWJvbFNpemU6IGZ1bmN0aW9uIHN5bWJvbFNpemUoZGF0YSkgewogICAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGRhdGFbMl0pIC8gNWUyOwogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihfcmVmKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhWzNdOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDEyMCwgMzYsIDUwLCAwLjUpJywKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRZOiA1LAogICAgICAgICAgICAgIGNvbG9yOiBuZXcgZ3JhcGhpYy5SYWRpYWxHcmFkaWVudCgwLjQsIDAuMywgMSwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiKDI1MSwgMTE4LCAxMjMpJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiKDIwNCwgNDYsIDcyKScKICAgICAgICAgICAgICB9XSkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICcyMDE1JywKICAgICAgICAgIGRhdGE6IF9kYXRhWzFdLAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgc3ltYm9sU2l6ZTogZnVuY3Rpb24gc3ltYm9sU2l6ZShkYXRhKSB7CiAgICAgICAgICAgIHJldHVybiBNYXRoLnNxcnQoZGF0YVsyXSkgLyA1ZTI7CiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKF9yZWYyKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYyLmRhdGE7CiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YVszXTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgyNSwgMTAwLCAxNTAsIDAuNSknLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFk6IDUsCiAgICAgICAgICAgICAgY29sb3I6IG5ldyBncmFwaGljLlJhZGlhbEdyYWRpZW50KDAuNCwgMC4zLCAxLCBbewogICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoMTI5LCAyMjcsIDIzOCknCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoMjUsIDE4MywgMjA3KScKICAgICAgICAgICAgICB9XSkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczoge30sCiAgd2F0Y2g6IHt9LAogIGNvbXBvbmVudHM6IHsKICAgIGNoYXJ0OiBFQ2hhcnRzCiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxmQWRhcHRpb246IGZ1bmN0aW9uIHNlbGZBZGFwdGlvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoX3RoaXMuJHJlZnMuY2hhcnRzQWxsKSB7CiAgICAgICAgICAgIF90aGlzLiRyZWZzLmNoYXJ0c0FsbC5yZXNpemUoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSwgMTApOwogICAgfQogIH0KfTs="},{"version":3,"sources":["scatter.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!-- 订单总数 -->\n    <chart :options=\"option\" ref=\"chartsAll\"/>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts\";\nimport { graphic } from 'echarts/lib/export'\nimport \"echarts/lib/chart/scatter\";\n\nconst data = [\n  [\n    [28604, 77, 17096869, 'Australia', 1990],\n    [31163, 77.4, 27662440, 'Canada', 1990],\n    [1516, 68, 1154605773, 'China', 1990],\n    [13670, 74.7, 10582082, 'Cuba', 1990],\n    [28599, 75, 4986705, 'Finland', 1990],\n    [29476, 77.1, 56943299, 'France', 1990],\n    [31476, 75.4, 78958237, 'Germany', 1990],\n    [28666, 78.1, 254830, 'Iceland', 1990],\n    [1777, 57.7, 870601776, 'India', 1990],\n    [29550, 79.1, 122249285, 'Japan', 1990],\n    [2076, 67.9, 20194354, 'North Korea', 1990],\n    [12087, 72, 42972254, 'South Korea', 1990],\n    [24021, 75.4, 3397534, 'New Zealand', 1990],\n    [43296, 76.8, 4240375, 'Norway', 1990],\n    [10088, 70.8, 38195258, 'Poland', 1990],\n    [19349, 69.6, 147568552, 'Russia', 1990],\n    [10670, 67.3, 53994605, 'Turkey', 1990],\n    [26424, 75.7, 57110117, 'United Kingdom', 1990],\n    [37062, 75.4, 252847810, 'United States', 1990]\n  ],\n  [\n    [44056, 81.8, 23968973, 'Australia', 2015],\n    [43294, 81.7, 35939927, 'Canada', 2015],\n    [13334, 76.9, 1376048943, 'China', 2015],\n    [21291, 78.5, 11389562, 'Cuba', 2015],\n    [38923, 80.8, 5503457, 'Finland', 2015],\n    [37599, 81.9, 64395345, 'France', 2015],\n    [44053, 81.1, 80688545, 'Germany', 2015],\n    [42182, 82.8, 329425, 'Iceland', 2015],\n    [5903, 66.8, 1311050527, 'India', 2015],\n    [36162, 83.5, 126573481, 'Japan', 2015],\n    [1390, 71.4, 25155317, 'North Korea', 2015],\n    [34644, 80.7, 50293439, 'South Korea', 2015],\n    [34186, 80.6, 4528526, 'New Zealand', 2015],\n    [64304, 81.6, 5210967, 'Norway', 2015],\n    [24787, 77.3, 38611794, 'Poland', 2015],\n    [23038, 73.13, 143456918, 'Russia', 2015],\n    [19360, 76.5, 78665830, 'Turkey', 2015],\n    [38225, 81.4, 64715810, 'United Kingdom', 2015],\n    [53354, 79.1, 321773631, 'United States', 2015]\n  ]\n]\n\nexport default {\n  name: \"clChartScatter\",\n  mounted() {\n    this.selfAdaption();\n  },\n  data() {\n    return {\n      option:{\n         title: {\n    text: '各国人均寿命与GDP对比'\n  },\n  legend: {\n    right: 10,\n    data: ['1990', '2015']\n  },\n  xAxis: {\n    splitLine: {\n      lineStyle: {\n        type: 'dashed'\n      }\n    }\n  },\n  yAxis: {\n    splitLine: {\n      lineStyle: {\n        type: 'dashed'\n      }\n    },\n    scale: true\n  },\n  series: [\n    {\n      name: '1990',\n      data: data[0],\n      type: 'scatter',\n      symbolSize (data) {\n        return Math.sqrt(data[2]) / 5e2\n      },\n      label: {\n        emphasis: {\n          show: true,\n          formatter ({ data }) {\n            return data[3]\n          },\n          position: 'top'\n        }\n      },\n      itemStyle: {\n        normal: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(120, 36, 50, 0.5)',\n          shadowOffsetY: 5,\n          color: new graphic.RadialGradient(0.4, 0.3, 1, [\n            {\n              offset: 0,\n              color: 'rgb(251, 118, 123)'\n            },\n            {\n              offset: 1,\n              color: 'rgb(204, 46, 72)'\n            }\n          ])\n        }\n      }\n    },\n    {\n      name: '2015',\n      data: data[1],\n      type: 'scatter',\n      symbolSize (data) {\n        return Math.sqrt(data[2]) / 5e2\n      },\n      label: {\n        emphasis: {\n          show: true,\n          formatter ({ data }) {\n            return data[3]\n          },\n          position: 'top'\n        }\n      },\n      itemStyle: {\n        normal: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(25, 100, 150, 0.5)',\n          shadowOffsetY: 5,\n          color: new graphic.RadialGradient(0.4, 0.3, 1, [\n            {\n              offset: 0,\n              color: 'rgb(129, 227, 238)'\n            },\n            {\n              offset: 1,\n              color: 'rgb(25, 183, 207)'\n            }\n          ])\n        }\n      }\n    }\n  ]\n      }\n    };\n  },\n  props: {\n  },\n  watch: {\n  },\n  components: { chart: ECharts },\n  methods: {\n    selfAdaption() {\n      let _this = this;\n      setTimeout(() => {\n        window.addEventListener(\"resize\", function() {\n          if (_this.$refs.chartsAll) {\n            _this.$refs.chartsAll.resize();\n          }\n        });\n      }, 10);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chartsAll {\n  height: 100%;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/components/echarts"}]}