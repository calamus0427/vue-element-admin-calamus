{"remainingRequest":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/pages/nav/nav_aside.vue?vue&type=template&id=54e9255c&scoped=true&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/pages/nav/nav_aside.vue","mtime":1573697955770},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}