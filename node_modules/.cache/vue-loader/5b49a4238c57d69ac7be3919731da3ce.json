{"remainingRequest":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/calamus-vue-element-admin/src/components/canvas/canvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/src/components/canvas/canvas.vue","mtime":1550039764318},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/calamus-vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6J0NMQ2FudmFzQmcnLAogICAgcHJvcHM6IHsKICAgICAgLy/ljp/ngrnmlbDph48KICAgICAgICBkb3RzTnVtOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogNTAKICAgICAgICB9LAogICAgICAgIC8v5b2p6Imy6L+Y5piv6buR55m9CiAgICAgICAgaXNDb2xvcjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICAvL+WchueahOminOiJsgogICAgICAgIHJvdW5kQ29sb3I6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAiIzk5OSIKICAgICAgICB9LAogICAgICAgIC8v55u057q/6aKc6ImyCiAgICAgICAgbGluZUNvbG9yOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogIiNjY2MiCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhbnZhcyIpOwogICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogICAgICAgIGNvbnN0IHJuZENsID0gKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjI1KTsKICAgICAgICBjb25zdCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoOwogICAgICAgIGNvbnN0IGhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDsKICAgICAgICB2YXIgYmFzZV9saXN0ID0gW107CiAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGg7CiAgICAgICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDsKICAgICAgICAvLyDnu5jliLblm60KICAgICAgICBjb25zdCBkcmF3Um91bmRzID0gKG9iaiwgaW5kZXgpID0+IHsKICAgICAgICAgICAgbGV0IHsgeCwgeSwgciwgY29sb3IgfSA9IG9iajsKICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgICAgICBjdHguYXJjKHgsIHksIHIsIDAsIDIgKiBNYXRoLlBJKTsKICAgICAgICAgICAgaWYgKHRoaXMuaXNDb2xvcikgewogICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMucm91bmRDb2xvcgogICAgICAgICAgICB9CiAgICAgICAgICAgIGN0eC5maWxsKCk7CiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTsKICAgICAgICB9CgogICAgICAgIC8v5Yik5pat56e75Yqo5pa55ZCRCiAgICAgICAgY29uc3QgY29udHJvbERpcmVjdGlvbiA9IChvYmopID0+IHsKICAgICAgICAgICAgaWYgKG9iai54ID49ICh3aWR0aCAtIG9iai5yKSkgewogICAgICAgICAgICAgICAgb2JqLmNvbnRyb2xYID0gImxlZnQiOwogICAgICAgICAgICB9IGVsc2UgaWYgKG9iai54IDw9IHBhcnNlSW50KG9iai5yIC8gMikpIHsKICAgICAgICAgICAgICAgIG9iai5jb250cm9sWCA9ICJyaWdodCI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG9iai55ID49IChoZWlnaHQgLSBvYmoucikpIHsKICAgICAgICAgICAgICAgIG9iai5jb250cm9sWSA9ICJib3R0b20iOwogICAgICAgICAgICB9IGVsc2UgaWYgKG9iai55IDw9IHBhcnNlSW50KG9iai5yIC8gMikpIHsKICAgICAgICAgICAgICAgIG9iai5jb250cm9sWSA9ICJ0b3AiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG9iagogICAgICAgIH0KICAgICAgICAvL+WIkue6vwogICAgICAgIGNvbnN0IGRyYXdMaW5lID0gKGxpc3QpID0+IHsKICAgICAgICAgICAgbGlzdC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgICAgICAgICBjdHgubW92ZVRvKGl0ZW0ueDEsIGl0ZW0ueTEpOwogICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhpdGVtLngyLCBpdGVtLnkyKTsKICAgICAgICAgICAgICAgIGN0eC5MaW5lV2VpZ2h0ID0gMTsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzQ29sb3IpIHsKICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBpdGVtLmNvbG9yOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLmxpbmVDb2xvcgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpOwogICAgICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICAvL+e7mOWItgogICAgICAgIGNvbnN0IGRyYXcgPSAobGlzdCkgPT4gewogICAgICAgICAgICBsZXQgZG90c19hcnIgPSBbXTsKICAgICAgICAgICAgbGV0IGxpbmVfYXJyID0gW107CiAgICAgICAgICAgIGxpc3QubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgICAgICAgbGV0IHh5ID0gY29udHJvbERpcmVjdGlvbihpdGVtKTsKICAgICAgICAgICAgICAgIGxldCBvYmogPSByb3VuZE1vdmUoeHkpOwogICAgICAgICAgICAgICAgZG90c19hcnIucHVzaChvYmopOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZG90c19hcnIubWFwKChpdGVtMSwgaW5kZXgxKSA9PiB7CiAgICAgICAgICAgICAgICBkb3RzX2Fyci5tYXAoKGl0ZW0yLCBpbmRleDIpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbTEgIT09IGl0ZW0yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4ID0gaXRlbTEueCAtIGl0ZW0yLng7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB5ID0gaXRlbTEueSAtIGl0ZW0yLnk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh4KSA8IDE1MCAmJiBNYXRoLmFicyh5KSA8IDE1MCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9iaiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MTogaXRlbTEueCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MTogaXRlbTEueSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MjogaXRlbTIueCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MjogaXRlbTIueSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogaXRlbTEuY29sb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVfYXJyLnB1c2gob2JqKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICAgICAgZHJhd0xpbmUobGluZV9hcnIpOwogICAgICAgICAgICBkb3RzX2Fyci5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICAgICAgICBkcmF3Um91bmRzKGl0ZW0sIGluZGV4KQogICAgICAgICAgICB9KQogICAgICAgICAgICBiYXNlX2xpc3QgPSBkb3RzX2FycjsKICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAvLyBpZih0aGlzLnBhdXNlZCl7CiAgICAgICAgICAgICAgICByZURyYXcoKQogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICB9LCA1MCkKICAgICAgICB9CiAgICAgICAgY29uc3QgcmVEcmF3ID0gKCkgPT4gewogICAgICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIHdpZHRoLCBoZWlnaHQpOwogICAgICAgICAgICBkcmF3KGJhc2VfbGlzdCkKICAgICAgICB9CiAgICAgICAgLy/np7vliqgKICAgICAgICBjb25zdCByb3VuZE1vdmUgPSAob2JqKSA9PiB7CiAgICAgICAgICAgIHN3aXRjaCAob2JqLmNvbnRyb2xYKSB7CiAgICAgICAgICAgICAgICBjYXNlICJyaWdodCI6CiAgICAgICAgICAgICAgICAgICAgb2JqLngrKzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgImxlZnQiOgogICAgICAgICAgICAgICAgICAgIG9iai54LS07CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICB9CiAgICAgICAgICAgIHN3aXRjaCAob2JqLmNvbnRyb2xZKSB7CiAgICAgICAgICAgICAgICBjYXNlICJ0b3AiOgogICAgICAgICAgICAgICAgICAgIG9iai55Kys7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICJib3R0b20iOgogICAgICAgICAgICAgICAgICAgIG9iai55LS07CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBvYmoKICAgICAgICB9CiAgICAgICAgLy/liJvpgKDlnIbngrkKICAgICAgICBjb25zdCBjcmVhdERvdHMgPSAoKSA9PiB7CiAgICAgICAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmRvdHNOdW07IGkrKykgewogICAgICAgICAgICAgICAgbGV0IG9iaiA9IHt9OwogICAgICAgICAgICAgICAgb2JqLnggPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogd2lkdGgpOwogICAgICAgICAgICAgICAgb2JqLnkgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogaGVpZ2h0KTsKICAgICAgICAgICAgICAgIG9iai5yID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwKTsKICAgICAgICAgICAgICAgIG9iai5jb250cm9sWCA9IHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAxMCkgPiA1ID8gImxlZnQiIDogInJpZ2h0IgogICAgICAgICAgICAgICAgb2JqLmNvbnRyb2xZID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwKSA+IDUgPyAiYm90dG9tIiA6ICJ0b3AiCiAgICAgICAgICAgICAgICBvYmouY29sb3IgPSBgcmdiYSgke3JuZENsKCl9LCR7cm5kQ2woKX0sJHtybmRDbCgpfSwuMylgCiAgICAgICAgICAgICAgICBhcnIucHVzaChvYmopCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGFycgogICAgICAgIH0KICAgICAgICBkcmF3KGNyZWF0RG90cygpKQogICAgICAgIC8v6byg5qCH56e75YqoCiAgICAgICAgY29uc3QgbW92ZVhZID0gKGV2ZW50KSA9PiB7CiAgICAgICAgICAgIGxldCBvYmogPSB7fTsKICAgICAgICAgICAgb2JqLnggPSBldmVudC5jbGllbnRYOwogICAgICAgICAgICBvYmoueSA9IGV2ZW50LmNsaWVudFk7CiAgICAgICAgICAgIG9iai5yID0gMDsKICAgICAgICAgICAgYmFzZV9saXN0WzBdID0gb2JqOwogICAgICAgICAgICBiYXNlX2xpc3RbMF1bInIiXSA9IDE7CiAgICAgICAgfQogICAgICAgIC8v6byg5qCH54K55Ye7CiAgICAgICAgY29uc3QgYWRkWFkgPSAoZXZlbnQpID0+IHsKICAgICAgICAgICAgbGV0IG9iaiA9IHt9OwogICAgICAgICAgICBvYmoueCA9IGV2ZW50LmNsaWVudFg7CiAgICAgICAgICAgIG9iai55ID0gZXZlbnQuY2xpZW50WTsKICAgICAgICAgICAgb2JqLnIgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTApOwogICAgICAgICAgICBvYmouY29sb3IgPSBgcmdiYSgke3JuZENsKCl9LCR7cm5kQ2woKX0sJHtybmRDbCgpfSwuMylgOwogICAgICAgICAgICBvYmouY29udHJvbFggPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTApID4gNSA/ICdsZWZ0JyA6ICdyaWdodCcKICAgICAgICAgICAgb2JqLmNvbnRyb2xZID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwKSA+IDUgPyAnYm90dG9tJyA6ICd0b3AnCiAgICAgICAgICAgIGJhc2VfbGlzdC5wdXNoKG9iaik7CiAgICAgICAgfQogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLCBtb3ZlWFkpOwogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGFkZFhZKQogICAgfSwKCn0K"},{"version":3,"sources":["canvas.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"canvas.vue","sourceRoot":"src/components/canvas","sourcesContent":["<template>\n    <canvas id=\"canvas\">\n    </canvas>\n</template>\n<script>\nexport default {\n    name:'CLCanvasBg',\n    props: {\n      //原点数量\n        dotsNum: {\n            type: Number,\n            default: 50\n        },\n        //彩色还是黑白\n        isColor: {\n            type: Boolean,\n            default: true\n        },\n        //圆的颜色\n        roundColor: {\n            type: String,\n            default: \"#999\"\n        },\n        //直线颜色\n        lineColor: {\n            type: String,\n            default: \"#ccc\"\n        }\n    },\n    mounted() {\n        const canvas = document.getElementById(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const rndCl = () => Math.floor(Math.random() * 225);\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        var base_list = [];\n        canvas.width = width;\n        canvas.height = height;\n        // 绘制园\n        const drawRounds = (obj, index) => {\n            let { x, y, r, color } = obj;\n            ctx.beginPath();\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\n            if (this.isColor) {\n                ctx.fillStyle = color;\n            } else {\n                ctx.fillStyle = this.roundColor\n            }\n            ctx.fill();\n            ctx.closePath();\n        }\n\n        //判断移动方向\n        const controlDirection = (obj) => {\n            if (obj.x >= (width - obj.r)) {\n                obj.controlX = \"left\";\n            } else if (obj.x <= parseInt(obj.r / 2)) {\n                obj.controlX = \"right\";\n            }\n            if (obj.y >= (height - obj.r)) {\n                obj.controlY = \"bottom\";\n            } else if (obj.y <= parseInt(obj.r / 2)) {\n                obj.controlY = \"top\"\n            }\n            return obj\n        }\n        //划线\n        const drawLine = (list) => {\n            list.map((item, index) => {\n                ctx.beginPath();\n                ctx.moveTo(item.x1, item.y1);\n                ctx.lineTo(item.x2, item.y2);\n                ctx.LineWeight = 1;\n                if (this.isColor) {\n                    ctx.strokeStyle = item.color;\n                } else {\n                    ctx.strokeStyle = this.lineColor\n                }\n                ctx.stroke();\n                ctx.closePath();\n            })\n        }\n        //绘制\n        const draw = (list) => {\n            let dots_arr = [];\n            let line_arr = [];\n            list.map((item, index) => {\n                let xy = controlDirection(item);\n                let obj = roundMove(xy);\n                dots_arr.push(obj);\n            });\n            dots_arr.map((item1, index1) => {\n                dots_arr.map((item2, index2) => {\n                    if (item1 !== item2) {\n                        let x = item1.x - item2.x;\n                        let y = item1.y - item2.y;\n                        if (Math.abs(x) < 150 && Math.abs(y) < 150) {\n                            let obj = {\n                                x1: item1.x,\n                                y1: item1.y,\n                                x2: item2.x,\n                                y2: item2.y,\n                                color: item1.color\n                            }\n                            line_arr.push(obj)\n                        }\n                    }\n                })\n            })\n            drawLine(line_arr);\n            dots_arr.map((item, index) => {\n                drawRounds(item, index)\n            })\n            base_list = dots_arr;\n            setTimeout(() => {\n                // if(this.paused){\n                reDraw()\n                // }\n            }, 50)\n        }\n        const reDraw = () => {\n            ctx.clearRect(0, 0, width, height);\n            draw(base_list)\n        }\n        //移动\n        const roundMove = (obj) => {\n            switch (obj.controlX) {\n                case \"right\":\n                    obj.x++;\n                    break;\n                case \"left\":\n                    obj.x--;\n                    break;\n                default:\n            }\n            switch (obj.controlY) {\n                case \"top\":\n                    obj.y++;\n                    break;\n                case \"bottom\":\n                    obj.y--;\n                    break;\n                default:\n            }\n            return obj\n        }\n        //创造圆点\n        const creatDots = () => {\n            let arr = [];\n            for (let i = 0; i < this.dotsNum; i++) {\n                let obj = {};\n                obj.x = parseInt(Math.random() * width);\n                obj.y = parseInt(Math.random() * height);\n                obj.r = parseInt(Math.random() * 10);\n                obj.controlX = parseInt(Math.random() * 10) > 5 ? \"left\" : \"right\"\n                obj.controlY = parseInt(Math.random() * 10) > 5 ? \"bottom\" : \"top\"\n                obj.color = `rgba(${rndCl()},${rndCl()},${rndCl()},.3)`\n                arr.push(obj)\n            }\n            return arr\n        }\n        draw(creatDots())\n        //鼠标移动\n        const moveXY = (event) => {\n            let obj = {};\n            obj.x = event.clientX;\n            obj.y = event.clientY;\n            obj.r = 0;\n            base_list[0] = obj;\n            base_list[0][\"r\"] = 1;\n        }\n        //鼠标点击\n        const addXY = (event) => {\n            let obj = {};\n            obj.x = event.clientX;\n            obj.y = event.clientY;\n            obj.r = parseInt(Math.random() * 10);\n            obj.color = `rgba(${rndCl()},${rndCl()},${rndCl()},.3)`;\n            obj.controlX = parseInt(Math.random() * 10) > 5 ? 'left' : 'right'\n            obj.controlY = parseInt(Math.random() * 10) > 5 ? 'bottom' : 'top'\n            base_list.push(obj);\n        }\n        window.addEventListener(\"mousemove\", moveXY);\n        window.addEventListener(\"click\", addXY)\n    },\n\n}\n</script>\n<style>\n    #canvas{\n        position: fixed;\n        z-index: -1;\n        top: 0;\n        left: 0;\n    }\n</style>\n"]}]}