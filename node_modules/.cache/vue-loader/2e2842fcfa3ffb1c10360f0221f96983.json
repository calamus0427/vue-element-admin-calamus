{"remainingRequest":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/components/echarts/cMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/src/components/echarts/cMap.vue","mtime":1573638938940},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-element-admin-calamus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFQ2hhcnRzIGZyb20gInZ1ZS1lY2hhcnRzL2NvbXBvbmVudHMvRUNoYXJ0cyI7CmltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2VjaGFydHMvbWFwL2pzL2NoaW5hLmpzJzsKaW1wb3J0ICJlY2hhcnRzL2xpYi9jaGFydC9tYXAiOwogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIG5hbWU6J2NsQ2hhcnRDbWFwJywKICAgICAgICBjb21wb25lbnRzOiB7IGNoYXJ0OiBFQ2hhcnRzIH0sCiAgICAgICAgZGF0YSgpewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY2hhcnQ6bnVsbCwKICAgICAgICAgICAgb3B0aW9uOnsKICAgICAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgICAgICAgdGV4dDogJzIwMTnlubTlhajlm73lkITnnIHku73mipXotYTmg4XlhrUnLAogICAgICAgICAgICAgICAgICAgIHN1YnRleHQ6ICfljZXkvY0v5LiH5YWDJywKICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnY2VudGVyJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsCiAgICAgICAgICAgICAgICAgICAgbGVmdDogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIGRhdGE6WyfmgLvmipXotYTpop0nXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgICAgICAgICBtYXg6IDEyMDAwMDAsCiAgICAgICAgICAgICAgICAgICAgbGVmdDogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIHRvcDogJ2JvdHRvbScsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogWyfpq5gnLCfkvY4nXSwgICAgICAgICAgIC8vIOaWh+acrO+8jOm7mOiupOS4uuaVsOWAvOaWh+acrAogICAgICAgICAgICAgICAgICAgIGNhbGN1bGFibGU6IHRydWUKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsCiAgICAgICAgICAgICAgICAgICAgbGVmdDogJ3JpZ2h0JywKICAgICAgICAgICAgICAgICAgICB0b3A6ICdjZW50ZXInLAogICAgICAgICAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVZpZXc6IHtyZWFkT25seTogZmFsc2V9LAogICAgICAgICAgICAgICAgICAgICAgICByZXN0b3JlOiB7fSwKICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNlcmllczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ+aAu+aKlei1hOminScsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdtYXAnLAogICAgICAgICAgICAgICAgICAgICAgICBtYXBUeXBlOiAnY2hpbmEnLAogICAgICAgICAgICAgICAgICAgICAgICByb2FtOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WMl+S6rCcsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+Wkqea0pScsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+S4iua1tycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+mHjeW6hicsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+ays+WMlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+ays+WNlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+S6keWNlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+i+veWugScsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+m7kem+meaxnycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+a5luWNlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WuieW+vScsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WxseS4nCcsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+aWsOeWhicsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+axn+iLjycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+a1meaxnycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+axn+ilvycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+a5luWMlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+W5v+ilvycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+eUmOiCgycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WxseilvycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WGheiSmeWPpCcsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+mZleilvycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WQieaelycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+emj+W7uicsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+i0teW3nicsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+W5v+S4nCcsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+mdkua1tycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+ilv+iXjycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+Wbm+W3nScsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WugeWkjycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+a1t+WNlycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+WPsOa5vicsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+mmmea4rycsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ+a+s+mXqCcsdmFsdWU6IHRoaXMucmFuZG9tRGF0YSgpIH0KICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbW91bnRlZCgpewogICAgICAgICAgICAgIHRoaXMuc2VsZkFkYXB0aW9uKCk7CiAgICAgICAgfSwKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgIHNlbGZBZGFwdGlvbigpIHsKICAgICAgICAgICAgICAgIGxldCBfdGhpcyA9IHRoaXM7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLiRyZWZzLmNoYXJ0c0FsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy4kcmVmcy5jaGFydHNBbGwucmVzaXplKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSwgMTAwKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmFuZG9tRGF0YSgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkqMTAwMDAwMCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cg=="},{"version":3,"sources":["cMap.vue"],"names":[],"mappingsfile":"cMap.vue","sourceRoot":"src/components/echarts","sourcesContent":["<template>\n    <!-- <div class=\"fillcontain\">\n        <div class=\"fillcontainer\" ref=\"fillcontainer\">\n            <div id=\"fundPosition\" class=\"echartsPosition\"></div>\n        </div>\n    </div> -->\n    <chart :options=\"option\" ref=\"chartsAll\" />\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts\";\nimport '../../../node_modules/echarts/map/js/china.js';\nimport \"echarts/lib/chart/map\";\n    export default {\n        name:'clChartCmap',\n        components: { chart: ECharts },\n        data(){\n          return {\n            chart:null,\n            option:{\n                title: {\n                    text: '2019年全国各省份投资情况',\n                    subtext: '单位/万元',\n                    left: 'center'\n                },\n                tooltip: {\n                    trigger: 'item'\n                },\n                legend: {\n                    orient: 'vertical',\n                    left: 'left',\n                    data:['总投资额']\n                },\n                visualMap: {\n                    min: 0,\n                    max: 1200000,\n                    left: 'left',\n                    top: 'bottom',\n                    text: ['高','低'],           // 文本，默认为数值文本\n                    calculable: true\n                },\n                toolbox: {\n                    show: true,\n                    orient: 'vertical',\n                    left: 'right',\n                    top: 'center',\n                    feature: {\n                        dataView: {readOnly: false},\n                        restore: {},\n                        saveAsImage: {}\n                    }\n                },\n                series: [\n                    {\n                        name: '总投资额',\n                        type: 'map',\n                        mapType: 'china',\n                        roam: false,\n                        label: {\n                            normal: {\n                                show: true\n                            },\n                            emphasis: {\n                                show: true\n                            }\n                        },\n                        data:[\n                            {name: '北京',value: this.randomData() },\n                            {name: '天津',value: this.randomData() },\n                            {name: '上海',value: this.randomData() },\n                            {name: '重庆',value: this.randomData() },\n                            {name: '河北',value: this.randomData() },\n                            {name: '河南',value: this.randomData() },\n                            {name: '云南',value: this.randomData() },\n                            {name: '辽宁',value: this.randomData() },\n                            {name: '黑龙江',value: this.randomData() },\n                            {name: '湖南',value: this.randomData() },\n                            {name: '安徽',value: this.randomData() },\n                            {name: '山东',value: this.randomData() },\n                            {name: '新疆',value: this.randomData() },\n                            {name: '江苏',value: this.randomData() },\n                            {name: '浙江',value: this.randomData() },\n                            {name: '江西',value: this.randomData() },\n                            {name: '湖北',value: this.randomData() },\n                            {name: '广西',value: this.randomData() },\n                            {name: '甘肃',value: this.randomData() },\n                            {name: '山西',value: this.randomData() },\n                            {name: '内蒙古',value: this.randomData() },\n                            {name: '陕西',value: this.randomData() },\n                            {name: '吉林',value: this.randomData() },\n                            {name: '福建',value: this.randomData() },\n                            {name: '贵州',value: this.randomData() },\n                            {name: '广东',value: this.randomData() },\n                            {name: '青海',value: this.randomData() },\n                            {name: '西藏',value: this.randomData() },\n                            {name: '四川',value: this.randomData() },\n                            {name: '宁夏',value: this.randomData() },\n                            {name: '海南',value: this.randomData() },\n                            {name: '台湾',value: this.randomData() },\n                            {name: '香港',value: this.randomData() },\n                            {name: '澳门',value: this.randomData() }\n                        ]\n                    }\n                ]\n            }\n          }\n        },\n        mounted(){\n              this.selfAdaption();\n        },\n        methods: {\n            selfAdaption() {\n                let _this = this;\n                setTimeout(() => {\n                    window.addEventListener(\"resize\", function() {\n                    if (_this.$refs.chartsAll) {\n                        _this.$refs.chartsAll.resize();\n                    }\n                    });\n                }, 100);\n            },\n            randomData() {\n                return Math.round(Math.random()*1000000);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n.chartsAll {\n  height: 100%;\n  width: 100%;\n}\n</style>\n"]}]}